// Rem output with px fallback
@mixin font-size($sizeValue: 1.6) {
	font-size: ($sizeValue * 10) + px;
	font-size: $sizeValue + rem;

	@if ( $sizeValue > 5.6) {
		@media ( max-width: 480px ) {
			$value: $sizeValue * 0.7;
			font-size: ($value * 10) + px;
			font-size: $value + rem;
		}
	} @else {
		@if ( $sizeValue > 2.8 ) {
			@media ( max-width: 480px ) {
				$value: $sizeValue * 0.9;
				font-size: ($value * 10) + px;
				font-size: $value + rem;
			}
		}
	}
}

@mixin hover-state {
	&:hover, &:active, &:focus {
		@content;
	}
}

@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

@mixin clearfix-after() {
	clear: both;
}

@mixin light-on-dark() {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin uppercase( $sizeValue: false, $letterSpace: 1 ) {
	@if ( $sizeValue ) {
		@include font-size( $sizeValue );
	}
	font-family: $font-button;
	font-weight: 700;
	text-transform: uppercase;
	letter-spacing: $letterSpace * 1px;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin container( $width: $size-main-width ) {
	margin: 0 auto;
	max-width: $width;
	padding-left: 80px;
	padding-right: 80px;

	@media ( max-width: 600px ) {
		padding-left: 40px;
		padding-right: 40px;
	}
}

@mixin banner-bg( $width: $size-main-width, $color: $brown ) {
	position: relative;
	@include container( $width );
	padding-top: 80px;
	padding-bottom: 80px;
	margin-top: 0;
	margin-bottom: 80px;
	z-index: 1;

	&:before {
		content: '';
		position: absolute;
		z-index: -1;
		top: 0;
		left: calc( ( 50vw - #{ $width/2 } ) * -1 );
		width: 100vw;
		bottom: 0;
		background: $color;
	}

	@media ( max-width: $width ) {
		&:before {
			left: 0;
		}
	}
}

@mixin sr-clip() {
	clip: rect( 1px, 1px, 1px, 1px );
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
}

@mixin button {
	text-align: center;
	text-decoration: none;
	color: $white;
	background: $blue-600;
	border: 4px solid $blue-600;
	border-radius: 5px;

	@include hover-state {
		background: $blue-700;
		border-color: $blue-700;
	}

	&:focus {
		$innerborder: 3px;
		outline: none;
		box-shadow: inset $innerborder 0 0 0 $blue-200,
		            inset $innerborder*-1 0 0 0 $blue-200,
		            inset 0 $innerborder*-1 0 0 $blue-200,
		            inset 0 $innerborder 0 0 $blue-200;
	}
}
@mixin button-secondary {
	@include button;
	background: $orange-400;
	border-color: $orange-400;

	@include hover-state {
		background: $orange-600;
		border-color: $orange-600;
	}

	&:focus {
		$innerborder: 3px;
		box-shadow: inset $innerborder 0 0 0 $orange-200,
		            inset $innerborder*-1 0 0 0 $orange-200,
		            inset 0 $innerborder*-1 0 0 $orange-200,
		            inset 0 $innerborder 0 0 $orange-200;
	}
}

@mixin input-placeholder {
	::-webkit-input-placeholder {
		@content;
	}
	::-moz-placeholder {
		@content;
	}
	:-ms-input-placeholder {
		@content;
	}
	:-moz-placeholder {
		@content;
	}
}
